//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Inputs/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Movement 3rd person"",
            ""id"": ""f6b2bc20-5cf1-40e3-82ea-573ef493bf4a"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c1bf31b7-72f6-440e-abcc-d131976b78d3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6e583480-ef98-44c8-a608-6a0b5c35f7c0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseAction"",
                    ""type"": ""Button"",
                    ""id"": ""f2b18ae4-0ebd-4bdd-956f-ca502d872cdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseAction2"",
                    ""type"": ""Button"",
                    ""id"": ""bee6c870-9a33-4416-b2c0-5e3e8a560c38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""0538fc70-1028-44aa-b5d1-a4b427f628d3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DevTool"",
                    ""type"": ""Button"",
                    ""id"": ""b7408a64-ba3f-4932-adb2-79174ae64b73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""54fc1f88-22e7-4748-912a-edb4d97a7cf1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c459ca5f-1cee-4057-a6c7-63d5ffa27b8e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dc06d989-9d7a-4879-865a-c510a0dd46a2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""075b36d3-4f70-451b-9009-6ebb8caf8795"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""49d3fc33-4568-4744-b96e-6c1baf21864a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5895db2c-5b0e-4dc4-b704-027b4a000221"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b41a022c-b494-440a-85e8-fe8b4207ce7e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a94c88bb-df30-4ee8-95ba-2821a0556504"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseAction2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""45ad2c1c-6b3c-4e3d-8e72-eb19fd4b7b87"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ca1c036d-b513-4337-b1f4-63836adfd2b8"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2f184da0-6a46-4936-88c9-2fc1a5147426"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2a8f83b4-ee7e-47e0-b70f-6f79aec96ba8"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevTool"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement 3rd person
        m_Movement3rdperson = asset.FindActionMap("Movement 3rd person", throwIfNotFound: true);
        m_Movement3rdperson_Movement = m_Movement3rdperson.FindAction("Movement", throwIfNotFound: true);
        m_Movement3rdperson_mouse = m_Movement3rdperson.FindAction("mouse", throwIfNotFound: true);
        m_Movement3rdperson_MouseAction = m_Movement3rdperson.FindAction("MouseAction", throwIfNotFound: true);
        m_Movement3rdperson_MouseAction2 = m_Movement3rdperson.FindAction("MouseAction2", throwIfNotFound: true);
        m_Movement3rdperson_MouseScroll = m_Movement3rdperson.FindAction("MouseScroll", throwIfNotFound: true);
        m_Movement3rdperson_DevTool = m_Movement3rdperson.FindAction("DevTool", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement 3rd person
    private readonly InputActionMap m_Movement3rdperson;
    private List<IMovement3rdpersonActions> m_Movement3rdpersonActionsCallbackInterfaces = new List<IMovement3rdpersonActions>();
    private readonly InputAction m_Movement3rdperson_Movement;
    private readonly InputAction m_Movement3rdperson_mouse;
    private readonly InputAction m_Movement3rdperson_MouseAction;
    private readonly InputAction m_Movement3rdperson_MouseAction2;
    private readonly InputAction m_Movement3rdperson_MouseScroll;
    private readonly InputAction m_Movement3rdperson_DevTool;
    public struct Movement3rdpersonActions
    {
        private @InputMaster m_Wrapper;
        public Movement3rdpersonActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Movement3rdperson_Movement;
        public InputAction @mouse => m_Wrapper.m_Movement3rdperson_mouse;
        public InputAction @MouseAction => m_Wrapper.m_Movement3rdperson_MouseAction;
        public InputAction @MouseAction2 => m_Wrapper.m_Movement3rdperson_MouseAction2;
        public InputAction @MouseScroll => m_Wrapper.m_Movement3rdperson_MouseScroll;
        public InputAction @DevTool => m_Wrapper.m_Movement3rdperson_DevTool;
        public InputActionMap Get() { return m_Wrapper.m_Movement3rdperson; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Movement3rdpersonActions set) { return set.Get(); }
        public void AddCallbacks(IMovement3rdpersonActions instance)
        {
            if (instance == null || m_Wrapper.m_Movement3rdpersonActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Movement3rdpersonActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @mouse.started += instance.OnMouse;
            @mouse.performed += instance.OnMouse;
            @mouse.canceled += instance.OnMouse;
            @MouseAction.started += instance.OnMouseAction;
            @MouseAction.performed += instance.OnMouseAction;
            @MouseAction.canceled += instance.OnMouseAction;
            @MouseAction2.started += instance.OnMouseAction2;
            @MouseAction2.performed += instance.OnMouseAction2;
            @MouseAction2.canceled += instance.OnMouseAction2;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @DevTool.started += instance.OnDevTool;
            @DevTool.performed += instance.OnDevTool;
            @DevTool.canceled += instance.OnDevTool;
        }

        private void UnregisterCallbacks(IMovement3rdpersonActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @mouse.started -= instance.OnMouse;
            @mouse.performed -= instance.OnMouse;
            @mouse.canceled -= instance.OnMouse;
            @MouseAction.started -= instance.OnMouseAction;
            @MouseAction.performed -= instance.OnMouseAction;
            @MouseAction.canceled -= instance.OnMouseAction;
            @MouseAction2.started -= instance.OnMouseAction2;
            @MouseAction2.performed -= instance.OnMouseAction2;
            @MouseAction2.canceled -= instance.OnMouseAction2;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @DevTool.started -= instance.OnDevTool;
            @DevTool.performed -= instance.OnDevTool;
            @DevTool.canceled -= instance.OnDevTool;
        }

        public void RemoveCallbacks(IMovement3rdpersonActions instance)
        {
            if (m_Wrapper.m_Movement3rdpersonActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovement3rdpersonActions instance)
        {
            foreach (var item in m_Wrapper.m_Movement3rdpersonActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Movement3rdpersonActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Movement3rdpersonActions @Movement3rdperson => new Movement3rdpersonActions(this);
    public interface IMovement3rdpersonActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnMouseAction(InputAction.CallbackContext context);
        void OnMouseAction2(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnDevTool(InputAction.CallbackContext context);
    }
}
